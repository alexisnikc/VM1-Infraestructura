version: '3'
services:
  jenkins:
    container_name: jenkins
    image: jenkins/jenkins:lts
    volumes:
      - ./jenkins_home:/var/jenkins_home
    ports:
      - 8080:8080
      - 50000:50000
    environment:
      - GIT_URL=https://github.com/alexisnikc/tp-final-credicoop
      - GIT_BRANCH=main
      - JENKINS_URL=http://localhost:8080/
      - JENKINS_SECRET=${JENKINS_SECRET}
      - JENKINS_AGENT_NAME=${JENKINS_AGENT_NAME}
    restart: always
    networks:
      - net_jenkins
    depends_on:
      - db

  sonarqube:
    container_name: sonarqube
    image: sonarqube
    depends_on:
      - db
    volumes:
      - ./sonarqube/conf:/opt/sonarqube/conf
      - ./sonarqube/data:/opt/sonarqube/data
      - ./sonarqube/extensions:/opt/sonarqube/extensions
      - ./sonarqube/bundled-plugins:/opt/sonarqube/lib/bundled-plugins
    ports:
      - 9000:9000
    environment:
      - SONAR_JDBC_URL=jdbc:postgresql://db:5432/sonar
      - SONAR_JDBC_USERNAME=${SONAR_USER}
      - SONAR_JDBC_PASSWORD=${SONAR_PASSWORD}
    networks:
      - net_jenkins

  init:
    image: bash
    privileged: true
    user: root
    volumes:
      - ./init.sh:/mnt/init.sh 
    command: ["sh", "-e", "/mnt/init.sh"]
    networks:
      - net_jenkins

  db:
    image: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - ./postgresql/conf:/var/lib/postgresql
      - ./postgresql/data:/var/lib/postgresql/data
    restart: always
    networks:
      - net_jenkins
    
  ansible:
    container_name: ansible
    image: williamyeh/ansible:alpine3
    volumes:
      - ./ansible:/ansible
    restart: always
    networks:
      - net_jenkins
    
networks:
  net_jenkins:
