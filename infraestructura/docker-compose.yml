version: '3'
services:
  jenkins:
    container_name: jenkins
    image: jenkins/jenkins:lts
    volumes:
      - ./jenkins_home:/var/jenkins_home
    ports:
      - 8080:8080
      - 50000:50000
    networks:
      - net_jenkins
    restart: always

  init:
    image: bash
    privileged: true
    user: root
    volumes:
      - ./init.sh:/mnt/init.sh
    command: ["sh", "-e", "/mnt/init.sh"]

  sonarqube:
    container_name: sonarqube
    image: sonarqube
    depends_on:
      - db
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://db:5432/sonar
      SONAR_JDBC_USERNAME: sonar
      SONAR_JDBC_PASSWORD: sonar
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
    ports:
      - "9000:9000"
    networks:
      - net_jenkins
  
  db:
    image: postgres:12
    environment:
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonar
    volumes:
      - postgresql:/var/lib/postgresql
      - postgresql_data:/var/lib/postgresql/data
    networks:
      - net_jenkins

  ansible:
    container_name: ansible
    image: williamyeh/ansible:alpine3
    volumes:
      - ./ansible:/etc/ansible
    command: ["ansible-playbook", "/etc/ansible/playbook_01.yml"]
    restart: always

volumes:
  jenkins_home:
  ansible:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs:
  postgresql:
  postgresql_data:

networks:
  net_jenkins:
